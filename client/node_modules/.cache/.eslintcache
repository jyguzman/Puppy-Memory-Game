[{"C:\\Users\\jordi\\OneDrive\\Desktop\\puppymemorygame\\client\\src\\index.js":"1","C:\\Users\\jordi\\OneDrive\\Desktop\\puppymemorygame\\client\\src\\App.js":"2","C:\\Users\\jordi\\OneDrive\\Desktop\\puppymemorygame\\client\\src\\reportWebVitals.js":"3","C:\\Users\\jordi\\OneDrive\\Desktop\\puppymemorygame\\client\\src\\components\\Header.js":"4","C:\\Users\\jordi\\OneDrive\\Desktop\\puppymemorygame\\client\\src\\components\\Stats.js":"5","C:\\Users\\jordi\\OneDrive\\Desktop\\puppymemorygame\\client\\src\\components\\Board.js":"6","C:\\Users\\jordi\\OneDrive\\Desktop\\puppymemorygame\\client\\src\\components\\MemoryCard.js":"7","C:\\Users\\jordi\\OneDrive\\Desktop\\puppymemorygame\\client\\src\\components\\Game.js":"8","C:\\Users\\jordi\\OneDrive\\Desktop\\puppymemorygame\\client\\src\\components\\GameEnd.js":"9","C:\\Users\\jordi\\OneDrive\\Desktop\\puppymemorygame\\client\\src\\components\\Options.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":357,"mtime":1622341868534,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":1036,"mtime":1622345536758,"results":"15","hashOfConfig":"12"},{"size":608,"mtime":1622601115069,"results":"16","hashOfConfig":"12"},{"size":6907,"mtime":1622655235638,"results":"17","hashOfConfig":"12"},{"size":1259,"mtime":1622515850309,"results":"18","hashOfConfig":"12"},{"size":428,"mtime":1622655128267,"results":"19","hashOfConfig":"12"},{"size":1254,"mtime":1622602735521,"results":"20","hashOfConfig":"12"},{"size":1290,"mtime":1622597851258,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1uwl83g",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"24"},"C:\\Users\\jordi\\OneDrive\\Desktop\\puppymemorygame\\client\\src\\index.js",[],["48","49"],"C:\\Users\\jordi\\OneDrive\\Desktop\\puppymemorygame\\client\\src\\App.js",["50"],"import logo from './logo.svg';\nimport './App.css';\nimport { Container } from '@material-ui/core';\nimport Header from './components/Header';\nimport Game from './components/Game';\n\nfunction App() {\n  return (\n    <Container className=\"App\" maxWidth=\"lg\">\n      <Header />\n      <Game height={window.innerHeight}/>\n    </Container>\n  );\n}\n\nexport default App;\n","C:\\Users\\jordi\\OneDrive\\Desktop\\puppymemorygame\\client\\src\\reportWebVitals.js",[],"C:\\Users\\jordi\\OneDrive\\Desktop\\puppymemorygame\\client\\src\\components\\Header.js",["51","52","53","54"],"import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    }\r\n  }));\r\n\r\nconst Header = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Container className={classes.root}>\r\n            <AppBar>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    Pictures from Pexels.com\r\n                </Typography>\r\n            </AppBar>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Header;","C:\\Users\\jordi\\OneDrive\\Desktop\\puppymemorygame\\client\\src\\components\\Stats.js",[],"C:\\Users\\jordi\\OneDrive\\Desktop\\puppymemorygame\\client\\src\\components\\Board.js",["55","56","57","58","59","60","61","62"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport { makeStyles, Container, Grid, Box } from '@material-ui/core';\r\nimport MemoryCard from './MemoryCard';\r\nimport Stats from './Stats';\r\nimport GameEnd from './GameEnd';\r\nimport Options from './Options';\r\nimport axios from 'axios';\r\n\r\n const swap = (array, i, j) => {\r\n    const temp = array[i];\r\n    array[i] = array[j];\r\n    array[j] = temp;\r\n  }\r\n  \r\n  const shuffle = array => {\r\n    for(let i = array.length - 1; i >= 1; i--) {\r\n        const j = Math.floor(Math.random() * (i+1));\r\n        swap(array, j, i)\r\n    }\r\n  };\r\n\r\n    const formatTime = (time) => {\r\n        const seconds = time%60;\r\n        const minutes = Math.floor(time/60);\r\n\r\n        let result = \"\";\r\n        \r\n        if (minutes < 10)\r\n            result += \"0\";\r\n        result += minutes + \":\";\r\n\r\n        if (seconds < 10)\r\n            result += \"0\";\r\n        result += seconds;\r\n\r\n        let timeInWords = \"\";\r\n\r\n        if (minutes === 0)\r\n            timeInWords = seconds + \" seconds\";\r\n        else if (minutes === 1)\r\n            timeInWords = \"1 minute, \" + seconds + \" seconds\";\r\n        else timeInWords = minutes + \" minutes, \" + seconds + \" seconds\";\r\n\r\n        return [result, timeInWords];\r\n    \r\n  }\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    grid: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        margin: \"0 auto\",\r\n        flexWrap: \"wrap\",\r\n        paddingTop: \"20px\"\r\n    },\r\n    \r\n}));\r\n\r\nconst Board = (props) => {\r\n    const classes = useStyles();\r\n    const [images, setImages] = useState([]);\r\n\r\n    const [cards, setCards] = useState([]);\r\n    let timeout = useRef(null);\r\n    let timer = null;\r\n\r\n    const [time, setTime] = useState(0);\r\n    const [difficulty, setDifficulty] = useState(\"easy\");\r\n    const [inGame, setInGame] = useState(false);\r\n    const [flipCount, setFlipCount] = useState(0);\r\n    const [flippedCards, setFlippedCards] = useState([]);\r\n    const [solvedCards, setSolvedCards] = useState({});\r\n    const [disableBoard, setDisableBoard] = useState(false);\r\n    const [showGameEnd, setShowGameEnd] = useState(false);\r\n\r\n    const getCards = () => {\r\n        axios.get(\"/images\")\r\n        .then(res => {\r\n            const photos = res.data.images;\r\n            shuffle(photos);\r\n            let cards = [];\r\n            let num_cards = 0;\r\n            if(difficulty === \"easy\")\r\n                num_cards = 6;\r\n            else if (difficulty === \"medium\")\r\n                num_cards = 8;\r\n            else num_cards = 12;\r\n            for(let i = 0; i < num_cards; i++) {\r\n                const card = {\r\n                    img: photos[i].src.original,\r\n                    photographer: photos[i].photographer,\r\n                };\r\n\r\n                const match = {\r\n                    img: photos[i].src.original,\r\n                    photographer: photos[i].photographer,\r\n                };\r\n\r\n                cards.push(card);\r\n                cards.push(match);\r\n            }\r\n            shuffle(cards);\r\n            setCards(cards);\r\n        }).catch(err => console.log(err));\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCards();\r\n    }, [difficulty]);\r\n\r\n    useEffect(() => {\r\n        if (inGame && !showGameEnd)\r\n            timer = setTimeout(() => {\r\n                setTime(time + 1);\r\n            }, 1000);\r\n    });\r\n\r\n    const disableOptions = () => {\r\n        setInGame(true);\r\n    }\r\n\r\n    const enableCards = () => {\r\n        setDisableBoard(false);\r\n    };\r\n\r\n    const disableCards = () => {\r\n        setDisableBoard(true);\r\n    };\r\n    const onCardClick = (index) => {\r\n        setInGame(true);\r\n        if (flippedCards.length === 1) {\r\n            setFlippedCards(prev => [...prev, index]);\r\n            disableCards();\r\n        } else {\r\n            clearTimeout(timeout.current);\r\n            setFlippedCards([index]);\r\n        }\r\n        setFlipCount(flipCount + 1);\r\n    };\r\n\r\n    const isFlipped = (index) => {\r\n        return flippedCards.includes(index);\r\n    }\r\n\r\n    const checkMatch = () => {\r\n        const [firstIdx, secondIdx] = flippedCards;\r\n        enableCards();\r\n        if (cards[firstIdx].img === cards[secondIdx].img) {\r\n            setSolvedCards((prev) => ({ ...prev, [cards[firstIdx].img]: true }));\r\n            setFlippedCards([]);\r\n            return;\r\n        }\r\n\r\n        timeout.current = setTimeout(() => {\r\n            setFlippedCards([])\r\n        }, 500);\r\n    };\r\n\r\n    const isSolved = (card) => {\r\n        return Boolean(solvedCards[card.img]);\r\n    }\r\n\r\n    const checkGameEnd = () => {\r\n        let numToCheck = 6;\r\n        if (difficulty === \"medium\")\r\n            numToCheck = 8;\r\n        if (difficulty === \"hard\")\r\n            numToCheck = 12;\r\n        if (Object.keys(solvedCards).length === numToCheck) {\r\n            timer = null;\r\n            setShowGameEnd(true);\r\n            setInGame(false);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    useEffect(() => {\r\n        checkGameEnd();\r\n    }, [solvedCards]);\r\n\r\n    const restartGame = () => {\r\n        getCards();\r\n        setSolvedCards([]);\r\n        setFlippedCards([]);\r\n        setFlipCount(0);\r\n        setTime(0);\r\n        shuffle(cards);\r\n        enableCards();\r\n        setShowGameEnd(false);\r\n    };\r\n\r\n    const changeDifficulty = (event) => {\r\n        setDifficulty(event.target.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let timeout = null;\r\n        if (flippedCards.length === 2) {\r\n            checkMatch();\r\n            timeout = setTimeout(checkMatch, 300);\r\n        }\r\n        return () => { clearTimeout(timeout); }\r\n    }, [flippedCards]);\r\n\r\n    return (\r\n        <Container className={classes.grid}>\r\n            <Stats time={formatTime(time)[0]} flipCount={flipCount}/>\r\n            <Box display={disableBoard ? \"hidden\" : \"initial\"}>\r\n                <Options inGame={inGame} difficulty={difficulty} changeDifficulty={changeDifficulty}/>\r\n            </Box>\r\n            <Grid item container spacing={2} style={{height: props.height/6*4}}>\r\n                {   \r\n                    cards.map((card, index) => {\r\n                        return (\r\n                            <MemoryCard \r\n                                onClick={onCardClick}\r\n                                index={index}\r\n                                key={index}\r\n                                img={card.img} \r\n                                cards={cards}\r\n                                isDisabled={disableBoard}\r\n                                solved={isSolved(card)}\r\n                                isFlipped={isFlipped(index)}/>\r\n                        )\r\n                    })\r\n                }\r\n            </Grid>\r\n            <GameEnd difficulty={difficulty} open={showGameEnd} flipCount={flipCount} time={formatTime(time)[1]} restartGame={restartGame}/>\r\n        </Container>\r\n    );\r\n\r\n};\r\n\r\nexport default Board;","C:\\Users\\jordi\\OneDrive\\Desktop\\puppymemorygame\\client\\src\\components\\MemoryCard.js",[],"C:\\Users\\jordi\\OneDrive\\Desktop\\puppymemorygame\\client\\src\\components\\Game.js",["63","64"],"import React, { useEffect, useState } from 'react';\r\nimport { Container, Grid } from '@material-ui/core';\r\nimport Board from './Board';\r\n\r\nconst Game = (props) => {\r\n    return (\r\n        <Container maxWidth=\"lg\">\r\n          <Grid  item container direction=\"column\" justify=\"flex-start\" alignItems=\"center\">\r\n            <Board height={props.height}/>\r\n          </Grid>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Game;","C:\\Users\\jordi\\OneDrive\\Desktop\\puppymemorygame\\client\\src\\components\\GameEnd.js",[],"C:\\Users\\jordi\\OneDrive\\Desktop\\puppymemorygame\\client\\src\\components\\Options.js",["65","66","67","68","69"],"import React, { useState, useEffect } from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { makeStyles, Box, Container } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    options: {\r\n        paddingBottom: \"35px\",\r\n    },\r\n}));\r\n\r\nconst Options = (props)  => {\r\n  const classes = useStyles();\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  return (\r\n    <Container>\r\n      <FormControl component=\"fieldset\" className={classes.options}>\r\n        <RadioGroup row aria-label=\"gender\" name=\"gender1\" value={props.difficulty} onChange={props.changeDifficulty}>\r\n          <FormControlLabel disabled={props.inGame} value=\"easy\" control={<Radio />} label=\"Easy - 6 Puppies\" />\r\n          <FormControlLabel disabled={props.inGame} value=\"medium\" control={<Radio />} label=\"Medium - 8 Puppies\" />\r\n          <FormControlLabel disabled={props.inGame} value=\"hard\" control={<Radio />} label=\"Hard - 12 Puppies\" />\r\n        </RadioGroup>\r\n      </FormControl>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Options;",{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":1,"column":8,"nodeType":"76","messageId":"77","endLine":1,"endColumn":12},{"ruleId":"74","severity":1,"message":"78","line":3,"column":8,"nodeType":"76","messageId":"77","endLine":3,"endColumn":15},{"ruleId":"74","severity":1,"message":"79","line":5,"column":8,"nodeType":"76","messageId":"77","endLine":5,"endColumn":14},{"ruleId":"74","severity":1,"message":"80","line":6,"column":8,"nodeType":"76","messageId":"77","endLine":6,"endColumn":18},{"ruleId":"74","severity":1,"message":"81","line":7,"column":8,"nodeType":"76","messageId":"77","endLine":7,"endColumn":16},{"ruleId":"74","severity":1,"message":"82","line":61,"column":12,"nodeType":"76","messageId":"77","endLine":61,"endColumn":18},{"ruleId":"74","severity":1,"message":"83","line":61,"column":20,"nodeType":"76","messageId":"77","endLine":61,"endColumn":29},{"ruleId":"74","severity":1,"message":"84","line":65,"column":9,"nodeType":"76","messageId":"77","endLine":65,"endColumn":14},{"ruleId":"85","severity":1,"message":"86","line":109,"column":8,"nodeType":"87","endLine":109,"endColumn":20,"suggestions":"88"},{"ruleId":"85","severity":1,"message":"89","line":113,"column":21,"nodeType":"90","endLine":115,"endColumn":21},{"ruleId":"74","severity":1,"message":"91","line":118,"column":11,"nodeType":"76","messageId":"77","endLine":118,"endColumn":25},{"ruleId":"85","severity":1,"message":"92","line":180,"column":8,"nodeType":"87","endLine":180,"endColumn":21,"suggestions":"93"},{"ruleId":"85","severity":1,"message":"94","line":204,"column":8,"nodeType":"87","endLine":204,"endColumn":22,"suggestions":"95"},{"ruleId":"74","severity":1,"message":"96","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":26},{"ruleId":"74","severity":1,"message":"97","line":1,"column":28,"nodeType":"76","messageId":"77","endLine":1,"endColumn":36},{"ruleId":"74","severity":1,"message":"96","line":1,"column":27,"nodeType":"76","messageId":"77","endLine":1,"endColumn":36},{"ruleId":"74","severity":1,"message":"98","line":6,"column":8,"nodeType":"76","messageId":"77","endLine":6,"endColumn":17},{"ruleId":"74","severity":1,"message":"99","line":7,"column":22,"nodeType":"76","messageId":"77","endLine":7,"endColumn":25},{"ruleId":"74","severity":1,"message":"100","line":17,"column":10,"nodeType":"76","messageId":"77","endLine":17,"endColumn":18},{"ruleId":"74","severity":1,"message":"101","line":17,"column":20,"nodeType":"76","messageId":"77","endLine":17,"endColumn":31},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Toolbar' is defined but never used.","'Button' is defined but never used.","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","'images' is assigned a value but never used.","'setImages' is assigned a value but never used.","'timer' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCards'. Either include it or remove the dependency array.","ArrayExpression",["104"],"Assignments to the 'timer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'disableOptions' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'checkGameEnd'. Either include it or remove the dependency array.",["105"],"React Hook useEffect has a missing dependency: 'checkMatch'. Either include it or remove the dependency array.",["106"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'FormLabel' is defined but never used.","'Box' is defined but never used.","'disabled' is assigned a value but never used.","'setDisabled' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},"Update the dependencies array to be: [difficulty, getCards]",{"range":"113","text":"114"},"Update the dependencies array to be: [checkGameEnd, solvedCards]",{"range":"115","text":"116"},"Update the dependencies array to be: [checkMatch, flippedCards]",{"range":"117","text":"118"},[3170,3182],"[difficulty, getCards]",[5016,5029],"[checkGameEnd, solvedCards]",[5622,5636],"[checkMatch, flippedCards]"]