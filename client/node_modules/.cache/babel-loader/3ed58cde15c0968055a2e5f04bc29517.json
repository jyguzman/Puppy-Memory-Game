{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jordi\\\\OneDrive\\\\Desktop\\\\puppymemorygame\\\\client\\\\src\\\\components\\\\MemoryCard.js\";\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport ReactCardFlip from 'react-card-flip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MemoryCard = props => {\n  const img = props.img;\n  const backImg = \"%PUBLIC_URL%/paw.png\";\n  const crop = \"?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=150&w=150\";\n  const solved = props.solved;\n  const isFlipped = props.isFlipped;\n  const isDisabled = props.isDisabled;\n\n  const flipCard = () => {\n    !isDisabled && !isFlipped && !solved && props.onClick(props.index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 4,\n    sm: 3,\n    md: 3,\n    xl: 3,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: solved ? \"c solved\" : \"c\",\n      onClick: flipCard,\n      children: /*#__PURE__*/_jsxDEV(ReactCardFlip, {\n        isFlipped: solved ? true : isFlipped,\n        flipDirection: \"horizontal\",\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          image: backImg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          image: img + crop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n/*\r\n\r\n*/\n\n\n_c = MemoryCard;\nexport default MemoryCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemoryCard\");","map":{"version":3,"sources":["C:/Users/jordi/OneDrive/Desktop/puppymemorygame/client/src/components/MemoryCard.js"],"names":["React","Card","CardMedia","Grid","ReactCardFlip","MemoryCard","props","img","backImg","crop","solved","isFlipped","isDisabled","flipCard","onClick","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1B,QAAMC,GAAG,GAAGD,KAAK,CAACC,GAAlB;AACA,QAAMC,OAAO,GAAG,sBAAhB;AACA,QAAMC,IAAI,GAAG,uDAAb;AACA,QAAMC,MAAM,GAAGJ,KAAK,CAACI,MAArB;AACA,QAAMC,SAAS,GAAGL,KAAK,CAACK,SAAxB;AACA,QAAMC,UAAU,GAAGN,KAAK,CAACM,UAAzB;;AAEA,QAAMC,QAAQ,GAAG,MAAM;AACnB,KAACD,UAAD,IAAe,CAACD,SAAhB,IAA6B,CAACD,MAA9B,IAAwCJ,KAAK,CAACQ,OAAN,CAAcR,KAAK,CAACS,KAApB,CAAxC;AACH,GAFD;;AAIA,sBACI,QAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,CAAtB;AAAyB,IAAA,EAAE,EAAE,CAA7B;AAAgC,IAAA,EAAE,EAAE,CAApC;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAEL,MAAM,GAAG,UAAH,GAAgB,GAAvC;AAA4C,MAAA,OAAO,EAAEG,QAArD;AAAA,6BACI,QAAC,aAAD;AAAe,QAAA,SAAS,EAAEH,MAAM,GAAG,IAAH,GAAUC,SAA1C;AAAqD,QAAA,aAAa,EAAC,YAAnE;AAAA,gCACI,QAAC,SAAD;AACI,UAAA,SAAS,EAAC,KADd;AAEI,UAAA,KAAK,EAAEH;AAFX;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI,QAAC,SAAD;AACI,UAAA,SAAS,EAAC,KADd;AAEI,UAAA,KAAK,EAAED,GAAG,GAACE;AAFf;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CA7BD;AA+BA;AACA;AACA;;;KAjCMJ,U;AAkCN,eAAeA,UAAf","sourcesContent":["import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ReactCardFlip from 'react-card-flip';\r\n\r\nconst MemoryCard = (props) => {\r\n    const img = props.img;\r\n    const backImg = \"%PUBLIC_URL%/paw.png\";\r\n    const crop = \"?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=150&w=150\";\r\n    const solved = props.solved;\r\n    const isFlipped = props.isFlipped;\r\n    const isDisabled = props.isDisabled;\r\n\r\n    const flipCard = () => {\r\n        !isDisabled && !isFlipped && !solved && props.onClick(props.index);\r\n    }\r\n\r\n    return (\r\n        <Grid item xs={4} sm={3} md={3} xl={3}>\r\n            <Card className={solved ? \"c solved\" : \"c\"} onClick={flipCard}>\r\n                <ReactCardFlip isFlipped={solved ? true : isFlipped} flipDirection=\"horizontal\">\r\n                    <CardMedia\r\n                        component=\"img\"\r\n                        image={backImg}\r\n                    />\r\n                    <CardMedia\r\n                        component=\"img\"\r\n                        image={img+crop}\r\n\r\n                    />\r\n                </ReactCardFlip>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n};\r\n\r\n/*\r\n\r\n*/\r\nexport default MemoryCard;"]},"metadata":{},"sourceType":"module"}