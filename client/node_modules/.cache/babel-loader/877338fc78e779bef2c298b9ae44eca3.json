{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jordi\\\\OneDrive\\\\Desktop\\\\puppymemorygame\\\\src\\\\components\\\\MemoryCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSpring, animated } from \"react-spring\";\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyle, Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MemoryCard = props => {\n  _s();\n\n  const AnimCard = animated(Card);\n  const AnimCardMed = animated(CardMedia);\n  const url = props.url;\n  const url2 = \"https://pixabay.com/get/gb408ec9da33f4d82b874685968d2f99d3eae5cfc2ba703ba67c815b03ccd65edcd642ad7e216f3ec48804d72a577c2dc_640.png\";\n  const fit = \"?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=150&w=150\";\n  console.log(url + fit);\n  const [flipped, set] = useState(false);\n  const {\n    transform,\n    opacity\n  } = useSpring({\n    opacity: flipped ? 1 : 0,\n    transform: `perspective(600px) rotateX(${flipped ? 180 : 0}deg)`,\n    config: {\n      mass: 5,\n      tension: 500,\n      friction: 80\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 4,\n    sm: 3,\n    md: 3,\n    xl: 3,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      onClick: () => set(state => !state),\n      children: /*#__PURE__*/_jsxDEV(CardMedia, {\n        className: \"c front\",\n        component: \"img\",\n        image: flipped ? url + fit : url2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, url, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n/*\r\n\r\n                <AnimCardMed\r\n                    className=\"c back\"\r\n                    component=\"img\"\r\n                    image={url2}\r\n                    style={{ opacity, transform: transform.interpolate(t => `${t} rotateX(180deg)`) }}\r\n                />\r\n*/\n\n/*<AnimCard className='c front'  style={{\r\n                     backgroundImage: 'url(' + url + fit + ')',\r\n                     opacity: opacity.interpolate(o => 1 - o), transform }}/> \r\n                <AnimCard className=\"c back\" style={{ opacity, transform: transform.interpolate(t => `${t} rotateX(180deg)`) }}/>*/\n\n\n_s(MemoryCard, \"GrjCeOMQXrEISRqM6fEn3+6y8vg=\", false, function () {\n  return [useSpring];\n});\n\n_c = MemoryCard;\nexport default MemoryCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemoryCard\");","map":{"version":3,"sources":["C:/Users/jordi/OneDrive/Desktop/puppymemorygame/src/components/MemoryCard.js"],"names":["React","useState","useSpring","animated","Container","Card","CardMedia","Grid","makeStyle","Box","MemoryCard","props","AnimCard","AnimCardMed","url","url2","fit","console","log","flipped","set","transform","opacity","config","mass","tension","friction","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,SAAT,EAAoBC,GAApB,QAA+B,mBAA/B;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAMC,QAAQ,GAAGT,QAAQ,CAACE,IAAD,CAAzB;AACA,QAAMQ,WAAW,GAAGV,QAAQ,CAACG,SAAD,CAA5B;AACA,QAAMQ,GAAG,GAAGH,KAAK,CAACG,GAAlB;AACA,QAAMC,IAAI,GAAG,mIAAb;AACA,QAAMC,GAAG,GAAG,uDAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,GAACE,GAAhB;AACA,QAAM,CAACG,OAAD,EAAUC,GAAV,IAAiBnB,QAAQ,CAAC,KAAD,CAA/B;AACA,QAAM;AAACoB,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,MAAuBpB,SAAS,CAAC;AACnCoB,IAAAA,OAAO,EAAEH,OAAO,GAAG,CAAH,GAAO,CADY;AAEnCE,IAAAA,SAAS,EAAG,8BAA6BF,OAAO,GAAG,GAAH,GAAS,CAAE,MAFxB;AAGnCI,IAAAA,MAAM,EAAE;AAACC,MAAAA,IAAI,EAAE,CAAP;AAAUC,MAAAA,OAAO,EAAE,GAAnB;AAAwBC,MAAAA,QAAQ,EAAE;AAAlC;AAH2B,GAAD,CAAtC;AAKA,sBACI,QAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAqB,IAAA,EAAE,EAAE,CAAzB;AAA4B,IAAA,EAAE,EAAE,CAAhC;AAAmC,IAAA,EAAE,EAAE,CAAvC;AAA0C,IAAA,EAAE,EAAE,CAA9C;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,OAAO,EAAE,MAAMN,GAAG,CAACO,KAAK,IAAI,CAACA,KAAX,CAAxB;AAAA,6BACI,QAAC,SAAD;AACI,QAAA,SAAS,EAAC,SADd;AAEI,QAAA,SAAS,EAAC,KAFd;AAGI,QAAA,KAAK,EAAER,OAAO,GAAGL,GAAG,GAACE,GAAP,GAAaD;AAH/B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,KAAgBD,GAAhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAxBD;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;GAtCMJ,U;UAQ2BR,S;;;KAR3BQ,U;AAwCN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport Container from '@material-ui/core/Container';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyle, Box } from '@material-ui/core';\r\n\r\nconst MemoryCard = (props) => {\r\n    const AnimCard = animated(Card);\r\n    const AnimCardMed = animated(CardMedia);\r\n    const url = props.url;\r\n    const url2 = \"https://pixabay.com/get/gb408ec9da33f4d82b874685968d2f99d3eae5cfc2ba703ba67c815b03ccd65edcd642ad7e216f3ec48804d72a577c2dc_640.png\";\r\n    const fit = \"?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=150&w=150\";\r\n    console.log(url+fit);\r\n    const [flipped, set] = useState(false);\r\n    const {transform, opacity} = useSpring({\r\n        opacity: flipped ? 1 : 0,\r\n        transform: `perspective(600px) rotateX(${flipped ? 180 : 0}deg)`,\r\n        config: {mass: 5, tension: 500, friction: 80},\r\n    });\r\n    return (\r\n        <Grid item key={url} xs={4} sm={3} md={3} xl={3}>\r\n            <Card onClick={() => set(state => !state)}>\r\n                <CardMedia\r\n                    className=\"c front\"\r\n                    component=\"img\"\r\n                    image={flipped ? url+fit : url2}\r\n                />\r\n            </Card>\r\n        </Grid>\r\n    );\r\n};\r\n/*\r\n\r\n                <AnimCardMed\r\n                    className=\"c back\"\r\n                    component=\"img\"\r\n                    image={url2}\r\n                    style={{ opacity, transform: transform.interpolate(t => `${t} rotateX(180deg)`) }}\r\n                />\r\n*/\r\n\r\n/*<AnimCard className='c front'  style={{\r\n                     backgroundImage: 'url(' + url + fit + ')',\r\n                     opacity: opacity.interpolate(o => 1 - o), transform }}/> \r\n                <AnimCard className=\"c back\" style={{ opacity, transform: transform.interpolate(t => `${t} rotateX(180deg)`) }}/>*/\r\n\r\nexport default MemoryCard;"]},"metadata":{},"sourceType":"module"}