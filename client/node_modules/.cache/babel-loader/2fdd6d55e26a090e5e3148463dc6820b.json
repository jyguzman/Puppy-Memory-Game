{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jordi\\\\OneDrive\\\\Desktop\\\\puppymemorygame\\\\src\\\\components\\\\Board.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core';\nimport MemoryCard from './MemoryCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  grid: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    margin: \"0 auto\",\n    flexWrap: \"wrap\",\n    paddingTop: \"20px\"\n  }\n}));\n\nconst Board = props => {\n  _s();\n\n  const classes = useStyles();\n  let pictures = props.pictures;\n  const [memCards, setMemCards] = useState([]);\n  const [won, setWon] = useState(false);\n  const [flippedCards, setFlippedCards] = useState([]);\n\n  const checkForMatch = () => {\n    if (flippedCards[0].id === flippedCards[1].id) {\n      return true;\n    }\n  };\n\n  const onCardClick = () => {\n    if (checkForMatch()) {\n      setWon(true);\n      console.log(flippedCards);\n    }\n\n    if (flippedCards > 2) setFlippedCards([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.grid,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      spacing: 2,\n      style: {\n        height: props.height / 6 * 4\n      },\n      children: pictures.map((pic, index) => {\n        return /*#__PURE__*/_jsxDEV(MemoryCard, {\n          id: index,\n          onClick: onCardClick,\n          url: pic.src.original\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Board, \"A5teQyVU4lQ+l6vHaV0VA2NR6no=\", false, function () {\n  return [useStyles];\n});\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["C:/Users/jordi/OneDrive/Desktop/puppymemorygame/src/components/Board.js"],"names":["React","useEffect","useState","Container","Grid","makeStyles","MemoryCard","useStyles","theme","grid","display","justifyContent","margin","flexWrap","paddingTop","Board","props","classes","pictures","memCards","setMemCards","won","setWon","flippedCards","setFlippedCards","checkForMatch","id","onCardClick","console","log","height","map","pic","index","src","original"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,OAAO,EAAE,MADP;AAEFC,IAAAA,cAAc,EAAE,QAFd;AAGFC,IAAAA,MAAM,EAAE,QAHN;AAIFC,IAAAA,QAAQ,EAAE,MAJR;AAKFC,IAAAA,UAAU,EAAE;AALV;AAD+B,CAAZ,CAAD,CAA5B;;AAWA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACrB,QAAMC,OAAO,GAAGV,SAAS,EAAzB;AACA,MAAIW,QAAQ,GAAGF,KAAK,CAACE,QAArB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACmB,GAAD,EAAMC,MAAN,IAAgBpB,QAAQ,CAAC,KAAD,CAA9B;AACA,QAAM,CAACqB,YAAD,EAAeC,eAAf,IAAkCtB,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMuB,aAAa,GAAG,MAAM;AACxB,QAAGF,YAAY,CAAC,CAAD,CAAZ,CAAgBG,EAAhB,KAAuBH,YAAY,CAAC,CAAD,CAAZ,CAAgBG,EAA1C,EAA8C;AAC1C,aAAO,IAAP;AACH;AACJ,GAJD;;AAMA,QAAMC,WAAW,GAAG,MAAM;AACtB,QAAIF,aAAa,EAAjB,EAAqB;AACjBH,MAAAA,MAAM,CAAC,IAAD,CAAN;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYN,YAAZ;AACH;;AACD,QAAIA,YAAY,GAAG,CAAnB,EACIC,eAAe,CAAC,EAAD,CAAf;AACP,GAPD;;AASA,sBACI,QAAC,SAAD;AAAW,IAAA,SAAS,EAAEP,OAAO,CAACR,IAA9B;AAAA,2BACA,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,SAAS,MAApB;AAAqB,MAAA,OAAO,EAAE,CAA9B;AAAiC,MAAA,KAAK,EAAE;AAACqB,QAAAA,MAAM,EAAEd,KAAK,CAACc,MAAN,GAAa,CAAb,GAAe;AAAxB,OAAxC;AAAA,gBAEQZ,QAAQ,CAACa,GAAT,CAAa,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACzB,4BACI,QAAC,UAAD;AAAY,UAAA,EAAE,EAAEA,KAAhB;AAAuB,UAAA,OAAO,EAAEN,WAAhC;AACI,UAAA,GAAG,EAAEK,GAAG,CAACE,GAAJ,CAAQC;AADjB,WACgCF,KADhC;AAAA;AAAA;AAAA;AAAA,gBADJ;AAIH,OALD;AAFR;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CArCD;;GAAMlB,K;UACcR,S;;;KADdQ,K;AAuCN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport MemoryCard from './MemoryCard';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    grid: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        margin: \"0 auto\",\r\n        flexWrap: \"wrap\",\r\n        paddingTop: \"20px\"\r\n    },\r\n    \r\n}));\r\n\r\nconst Board = (props) => {\r\n    const classes = useStyles();\r\n    let pictures = props.pictures;\r\n    const [memCards, setMemCards] = useState([]);\r\n    const [won, setWon] = useState(false);\r\n    const [flippedCards, setFlippedCards] = useState([]);\r\n\r\n    const checkForMatch = () => {\r\n        if(flippedCards[0].id === flippedCards[1].id) {\r\n            return true;\r\n        }\r\n    };\r\n\r\n    const onCardClick = () => {\r\n        if (checkForMatch()) {\r\n            setWon(true);\r\n            console.log(flippedCards);\r\n        }\r\n        if (flippedCards > 2)\r\n            setFlippedCards([]);\r\n    }\r\n\r\n    return (\r\n        <Container className={classes.grid}>\r\n        <Grid item container spacing={2} style={{height: props.height/6*4}}>\r\n            {\r\n                pictures.map((pic, index) => {\r\n                    return (\r\n                        <MemoryCard id={index} onClick={onCardClick}\r\n                            url={pic.src.original} key={index}/>\r\n                    )\r\n                })\r\n            }\r\n        </Grid>\r\n        </Container>\r\n    );\r\n\r\n};\r\n\r\nexport default Board;"]},"metadata":{},"sourceType":"module"}