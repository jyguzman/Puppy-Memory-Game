{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jordi\\\\OneDrive\\\\Desktop\\\\puppymemorygame\\\\client\\\\src\\\\components\\\\GameEnd.js\";\nimport { Box, Container, Dialog, DialogActions, DialogContent, DialogContentText, Button, DialogTitle } from \"@material-ui/core\";\n/*const GameEnd = (props) => {\r\n    const images = props.images;\r\n    return (\r\n        <Container>\r\n            <Dialog\r\n                open={props.open}\r\n                disableBackdropClick\r\n                disableEscapeKeyDown\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"You've won!\"}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            You completed the game in {props.flipCount} moves. Click \"Restart\" to play again.\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={props.restartGame} color=\"primary\">\r\n                            Restart\r\n                        </Button>\r\n                    </DialogActions>\r\n            </Dialog>\r\n        </Container>\r\n    );\r\n};*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GameEnd = props => {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: props.open ? \"flex\" : \"hidden\",\n      children: [/*#__PURE__*/_jsxDEV(Dialog, {\n        open: props.open,\n        disableEscapeKeyDown: true,\n        \"aria-labelledby\": \"alert-dialog-title\",\n        \"aria-describedby\": \"alert-dialog-description\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"alert-dialog-title\",\n          children: \"You've won!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n            id: \"alert-dialog-description\",\n            children: [\"You completed the game in \", props.flipCount, \" moves! Click \\\"Restart\\\" to play again.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        spacing: 2,\n        style: {\n          height: props.height / 6 * 4\n        },\n        children: props.images.map(image => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            className: \"c\",\n            children: /*#__PURE__*/_jsxDEV(CardMedia, {\n              component: \"img\",\n              image: image.img\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: props.restartGame,\n        color: \"primary\",\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_c = GameEnd;\nexport default GameEnd;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameEnd\");","map":{"version":3,"sources":["C:/Users/jordi/OneDrive/Desktop/puppymemorygame/client/src/components/GameEnd.js"],"names":["Box","Container","Dialog","DialogActions","DialogContent","DialogContentText","Button","DialogTitle","GameEnd","props","open","flipCount","height","images","map","image","img","restartGame"],"mappings":";AAAA,SAASA,GAAT,EAAcC,SAAd,EAAyBC,MAAzB,EAAiCC,aAAjC,EAAgDC,aAAhD,EACEC,iBADF,EACqBC,MADrB,EAC6BC,WAD7B,QACgD,mBADhD;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACvB,sBACI,QAAC,SAAD;AAAA,2BACI,QAAC,GAAD;AAAK,MAAA,OAAO,EAAEA,KAAK,CAACC,IAAN,GAAa,MAAb,GAAsB,QAApC;AAAA,8BACI,QAAC,MAAD;AACA,QAAA,IAAI,EAAED,KAAK,CAACC,IADZ;AAEA,QAAA,oBAAoB,MAFpB;AAGA,2BAAgB,oBAHhB;AAIA,4BAAiB,0BAJjB;AAAA,gCAMA,QAAC,WAAD;AAAa,UAAA,EAAE,EAAC,oBAAhB;AAAA,oBAAsC;AAAtC;AAAA;AAAA;AAAA;AAAA,gBANA,eAOI,QAAC,aAAD;AAAA,iCACI,QAAC,iBAAD;AAAmB,YAAA,EAAE,EAAC,0BAAtB;AAAA,qDAC+BD,KAAK,CAACE,SADrC;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAeI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,SAAS,MAApB;AAAqB,QAAA,OAAO,EAAE,CAA9B;AAAiC,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAEH,KAAK,CAACG,MAAN,GAAa,CAAb,GAAe;AAAxB,SAAxC;AAAA,kBAEQH,KAAK,CAACI,MAAN,CAAaC,GAAb,CAAkBC,KAAD,IAAW;AACxB,8BACI,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC,GAAhB;AAAA,mCACQ,QAAC,SAAD;AACI,cAAA,SAAS,EAAC,KADd;AAEI,cAAA,KAAK,EAAEA,KAAK,CAACC;AAFjB;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,kBADJ;AAQH,SATD;AAFR;AAAA;AAAA;AAAA;AAAA,cAfJ,eA6BI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEP,KAAK,CAACQ,WAAvB;AAAoC,QAAA,KAAK,EAAC,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqCH,CAtCD;;KAAMT,O;AAwCN,eAAeA,OAAf","sourcesContent":["import { Box, Container, Dialog, DialogActions, DialogContent,\r\n  DialogContentText, Button, DialogTitle } from \"@material-ui/core\";\r\n\r\n/*const GameEnd = (props) => {\r\n    const images = props.images;\r\n    return (\r\n        <Container>\r\n            <Dialog\r\n                open={props.open}\r\n                disableBackdropClick\r\n                disableEscapeKeyDown\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"You've won!\"}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            You completed the game in {props.flipCount} moves. Click \"Restart\" to play again.\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={props.restartGame} color=\"primary\">\r\n                            Restart\r\n                        </Button>\r\n                    </DialogActions>\r\n            </Dialog>\r\n        </Container>\r\n    );\r\n};*/\r\n\r\nconst GameEnd = (props) => {\r\n    return (\r\n        <Container>\r\n            <Box display={props.open ? \"flex\" : \"hidden\"}>\r\n                <Dialog\r\n                open={props.open}\r\n                disableEscapeKeyDown\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"You've won!\"}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            You completed the game in {props.flipCount} moves! \r\n                            Click \"Restart\" to play again.\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n            </Dialog>\r\n                <Grid item container spacing={2} style={{height: props.height/6*4}}>\r\n                    {   \r\n                        props.images.map((image) => {\r\n                            return (\r\n                                <Card className=\"c\">\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            image={image.img}\r\n                                        />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </Grid>\r\n                <Button onClick={props.restartGame} color=\"primary\">\r\n                            Restart\r\n                </Button>\r\n            </Box>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default GameEnd;"]},"metadata":{},"sourceType":"module"}