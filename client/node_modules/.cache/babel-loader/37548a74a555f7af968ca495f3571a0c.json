{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jordi\\\\OneDrive\\\\Desktop\\\\puppymemorygame\\\\src\\\\components\\\\MemoryCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSpring, animated } from \"react-spring\";\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  card: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    height: \"150px\",\n    width: \"150px\"\n  }\n}));\n\nconst MemoryCard = props => {\n  _s();\n\n  const classes = useStyles();\n  const AnimCard = animated(Card);\n  const url = props.url;\n  const [flipped, set] = useState(false);\n  const {\n    transform,\n    opacity\n  } = useSpring({\n    opacity: flipped ? 1 : 0,\n    transform: `perspective(600px) rotateX(${flipped ? 180 : 0}deg)`,\n    config: {\n      mass: 5,\n      tension: 500,\n      friction: 80\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    sm: 3,\n    md: 3,\n    xl: 3,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      onClick: () => set(state => !state),\n      children: [/*#__PURE__*/_jsxDEV(AnimCard, {\n        className: \"${classes.card} c\",\n        style: {\n          backgroundImage: \"url('${url}')\",\n          opacity: opacity.interpolate(o => 1 - o),\n          transform\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AnimCard, {\n        className: \"c back\",\n        style: {\n          opacity,\n          transform: transform.interpolate(t => `${t} rotateX(180deg)`)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, url, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MemoryCard, \"rkfJ0aJgfiaqN0evpxZNhN4LtqU=\", false, function () {\n  return [useStyles, useSpring];\n});\n\n_c = MemoryCard;\nexport default MemoryCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemoryCard\");","map":{"version":3,"sources":["C:/Users/jordi/OneDrive/Desktop/puppymemorygame/src/components/MemoryCard.js"],"names":["React","useState","useSpring","animated","Container","Card","CardMedia","Grid","makeStyles","useStyles","theme","card","display","justifyContent","height","width","MemoryCard","props","classes","AnimCard","url","flipped","set","transform","opacity","config","mass","tension","friction","state","backgroundImage","interpolate","o","t"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,UAAT,QAA2B,mBAA3B;;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,OAAO,EAAE,MADP;AAEFC,IAAAA,cAAc,EAAE,QAFd;AAGFC,IAAAA,MAAM,EAAE,OAHN;AAIFC,IAAAA,KAAK,EAAE;AAJL;AAD+B,CAAZ,CAAD,CAA5B;;AAUA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAMC,OAAO,GAAGT,SAAS,EAAzB;AACA,QAAMU,QAAQ,GAAGhB,QAAQ,CAACE,IAAD,CAAzB;AACA,QAAMe,GAAG,GAAGH,KAAK,CAACG,GAAlB;AACA,QAAM,CAACC,OAAD,EAAUC,GAAV,IAAiBrB,QAAQ,CAAC,KAAD,CAA/B;AACA,QAAM;AAACsB,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,MAAuBtB,SAAS,CAAC;AACnCsB,IAAAA,OAAO,EAAEH,OAAO,GAAG,CAAH,GAAO,CADY;AAEnCE,IAAAA,SAAS,EAAG,8BAA6BF,OAAO,GAAG,GAAH,GAAS,CAAE,MAFxB;AAGnCI,IAAAA,MAAM,EAAE;AAACC,MAAAA,IAAI,EAAE,CAAP;AAAUC,MAAAA,OAAO,EAAE,GAAnB;AAAwBC,MAAAA,QAAQ,EAAE;AAAlC;AAH2B,GAAD,CAAtC;AAKA,sBACI,QAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAqB,IAAA,EAAE,EAAE,CAAzB;AAA4B,IAAA,EAAE,EAAE,CAAhC;AAAmC,IAAA,EAAE,EAAE,CAAvC;AAAA,2BACI,QAAC,SAAD;AAAW,MAAA,OAAO,EAAE,MAAMN,GAAG,CAACO,KAAK,IAAI,CAACA,KAAX,CAA7B;AAAA,8BACI,QAAC,QAAD;AAAU,QAAA,SAAS,EAAC,mBAApB;AAAyC,QAAA,KAAK,EAAE;AAC3CC,UAAAA,eAAe,EAAE,eAD0B;AAE3CN,UAAAA,OAAO,EAAEA,OAAO,CAACO,WAAR,CAAoBC,CAAC,IAAI,IAAIA,CAA7B,CAFkC;AAEDT,UAAAA;AAFC;AAAhD;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI,QAAC,QAAD;AAAU,QAAA,SAAS,EAAC,QAApB;AAA6B,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAF;AAAWD,UAAAA,SAAS,EAAEA,SAAS,CAACQ,WAAV,CAAsBE,CAAC,IAAK,GAAEA,CAAE,kBAAhC;AAAtB;AAApC;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,KAAgBb,GAAhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAxBD;;GAAMJ,U;UACcP,S,EAIaP,S;;;KAL3Bc,U;AA0BN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport Container from '@material-ui/core/Container';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        height: \"150px\",\r\n        width: \"150px\"\r\n    },\r\n    \r\n}));\r\n\r\nconst MemoryCard = (props) => {\r\n    const classes = useStyles();\r\n    const AnimCard = animated(Card);\r\n    const url = props.url;\r\n    const [flipped, set] = useState(false);\r\n    const {transform, opacity} = useSpring({\r\n        opacity: flipped ? 1 : 0,\r\n        transform: `perspective(600px) rotateX(${flipped ? 180 : 0}deg)`,\r\n        config: {mass: 5, tension: 500, friction: 80},\r\n    });\r\n    return (\r\n        <Grid item key={url} sm={3} md={3} xl={3} >\r\n            <Container onClick={() => set(state => !state)}>\r\n                <AnimCard className='${classes.card} c'  style={{\r\n                     backgroundImage: \"url('${url}')\",\r\n                     opacity: opacity.interpolate(o => 1 - o), transform }}> \r\n                   \r\n                </AnimCard>\r\n                <AnimCard className=\"c back\" style={{ opacity, transform: transform.interpolate(t => `${t} rotateX(180deg)`) }}>\r\n                 \r\n                </AnimCard>\r\n            </Container>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default MemoryCard;"]},"metadata":{},"sourceType":"module"}