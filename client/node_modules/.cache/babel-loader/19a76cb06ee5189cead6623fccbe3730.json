{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jordi\\\\OneDrive\\\\Desktop\\\\puppymemorygame\\\\src\\\\components\\\\MemoryCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSpring, animated as a } from 'react-spring';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyle } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MemoryCard = props => {\n  _s();\n\n  const img = props.img;\n  const backImg = \"https://pixabay.com/get/gb408ec9da33f4d82b874685968d2f99d3eae5cfc2ba703ba67c815b03ccd65edcd642ad7e216f3ec48804d72a577c2dc_640.png\";\n  const crop = \"?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=150&w=150\";\n  const [flipped, set] = useState(false);\n  const solved = props.solved;\n  const isFlipped = props.isFlipped;\n  const isDisabled = props.isDisabled;\n  const {\n    transform,\n    opacity\n  } = useSpring({\n    opacity: flipped ? 1 : 0,\n    transform: `perspective(600px) rotateX(${flipped ? 180 : 0}deg)`,\n    config: {\n      mass: 5,\n      tension: 500,\n      friction: 80\n    }\n  });\n\n  const flipCard = () => {\n    !isDisabled && !isFlipped && !solved && props.onClick(props.index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 4,\n    sm: 3,\n    md: 3,\n    xl: 3,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: props.id,\n      className: \"c\",\n      onClick: flipCard,\n      children: [/*#__PURE__*/_jsxDEV(a.div, {\n        className: \"c front\",\n        style: {\n          backgroundImage: 'url(' + img + crop + ')',\n          opacity: opacity.interpolate(o => 1 - o),\n          transform\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(a.div, {\n        className: \"c back\",\n        style: {\n          opacity,\n          transform: transform.interpolate(t => `${t} rotateX(180deg)`)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n/*\r\n<Card id={props.id} className=\"c\" onClick={flipCard}>\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    image={solved ? img+crop : (isFlipped ? img+crop : backImg)}\r\n                />\r\n            </Card>\r\n*/\n\n\n_s(MemoryCard, \"GrjCeOMQXrEISRqM6fEn3+6y8vg=\", false, function () {\n  return [useSpring];\n});\n\n_c = MemoryCard;\nexport default MemoryCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemoryCard\");","map":{"version":3,"sources":["C:/Users/jordi/OneDrive/Desktop/puppymemorygame/src/components/MemoryCard.js"],"names":["React","useState","useSpring","animated","a","Card","CardMedia","Grid","makeStyle","MemoryCard","props","img","backImg","crop","flipped","set","solved","isFlipped","isDisabled","transform","opacity","config","mass","tension","friction","flipCard","onClick","index","id","backgroundImage","interpolate","o","t"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,QAAQ,IAAIC,CAAhC,QAAyC,cAAzC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,SAAT,QAA0B,mBAA1B;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAMC,GAAG,GAAGD,KAAK,CAACC,GAAlB;AACA,QAAMC,OAAO,GAAG,mIAAhB;AACA,QAAMC,IAAI,GAAG,uDAAb;AACA,QAAM,CAACC,OAAD,EAAUC,GAAV,IAAiBd,QAAQ,CAAC,KAAD,CAA/B;AACA,QAAMe,MAAM,GAAGN,KAAK,CAACM,MAArB;AACA,QAAMC,SAAS,GAAGP,KAAK,CAACO,SAAxB;AACA,QAAMC,UAAU,GAAGR,KAAK,CAACQ,UAAzB;AAEA,QAAM;AAACC,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,MAAuBlB,SAAS,CAAC;AACnCkB,IAAAA,OAAO,EAAEN,OAAO,GAAG,CAAH,GAAO,CADY;AAEnCK,IAAAA,SAAS,EAAG,8BAA6BL,OAAO,GAAG,GAAH,GAAS,CAAE,MAFxB;AAGnCO,IAAAA,MAAM,EAAE;AAACC,MAAAA,IAAI,EAAE,CAAP;AAAUC,MAAAA,OAAO,EAAE,GAAnB;AAAwBC,MAAAA,QAAQ,EAAE;AAAlC;AAH2B,GAAD,CAAtC;;AAMA,QAAMC,QAAQ,GAAG,MAAM;AACnB,KAACP,UAAD,IAAe,CAACD,SAAhB,IAA6B,CAACD,MAA9B,IAAwCN,KAAK,CAACgB,OAAN,CAAchB,KAAK,CAACiB,KAApB,CAAxC;AAEH,GAHD;;AAIA,sBACI,QAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,CAAtB;AAAyB,IAAA,EAAE,EAAE,CAA7B;AAAgC,IAAA,EAAE,EAAE,CAApC;AAAA,2BACI;AAAK,MAAA,EAAE,EAAEjB,KAAK,CAACkB,EAAf;AAAmB,MAAA,SAAS,EAAC,GAA7B;AAAiC,MAAA,OAAO,EAAEH,QAA1C;AAAA,8BACI,QAAC,CAAD,CAAG,GAAH;AAAO,QAAA,SAAS,EAAC,SAAjB;AAA2B,QAAA,KAAK,EAAE;AAC9BI,UAAAA,eAAe,EAAE,SAASlB,GAAT,GAAeE,IAAf,GAAsB,GADT;AAE9BO,UAAAA,OAAO,EAAEA,OAAO,CAACU,WAAR,CAAoBC,CAAC,IAAI,IAAIA,CAA7B,CAFqB;AAEYZ,UAAAA;AAFZ;AAAlC;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,CAAD,CAAG,GAAH;AAAO,QAAA,SAAS,EAAC,QAAjB;AAA0B,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAF;AAAWD,UAAAA,SAAS,EAAEA,SAAS,CAACW,WAAV,CAAsBE,CAAC,IAAK,GAAEA,CAAE,kBAAhC;AAAtB;AAAjC;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA7BD;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAtCMvB,U;UAS2BP,S;;;KAT3BO,U;AAuCN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { useSpring, animated as a } from 'react-spring'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyle } from '@material-ui/core';\r\n\r\nconst MemoryCard = (props) => {\r\n    const img = props.img;\r\n    const backImg = \"https://pixabay.com/get/gb408ec9da33f4d82b874685968d2f99d3eae5cfc2ba703ba67c815b03ccd65edcd642ad7e216f3ec48804d72a577c2dc_640.png\";\r\n    const crop = \"?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=150&w=150\";\r\n    const [flipped, set] = useState(false);\r\n    const solved = props.solved;\r\n    const isFlipped = props.isFlipped;\r\n    const isDisabled = props.isDisabled;\r\n\r\n    const {transform, opacity} = useSpring({\r\n        opacity: flipped ? 1 : 0,\r\n        transform: `perspective(600px) rotateX(${flipped ? 180 : 0}deg)`,\r\n        config: {mass: 5, tension: 500, friction: 80},\r\n      })\r\n\r\n    const flipCard = () => {\r\n        !isDisabled && !isFlipped && !solved && props.onClick(props.index);\r\n\r\n    }\r\n    return (\r\n        <Grid item xs={4} sm={3} md={3} xl={3}>\r\n            <div id={props.id} className=\"c\" onClick={flipCard}>\r\n                <a.div className=\"c front\" style={{ \r\n                    backgroundImage: 'url(' + img + crop + ')',\r\n                    opacity: opacity.interpolate(o => 1 - o), transform }} />\r\n                <a.div className=\"c back\" style={{ opacity, transform: transform.interpolate(t => `${t} rotateX(180deg)`) }} />\r\n            </div>\r\n        </Grid>\r\n    );\r\n};\r\n\r\n/*\r\n<Card id={props.id} className=\"c\" onClick={flipCard}>\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    image={solved ? img+crop : (isFlipped ? img+crop : backImg)}\r\n                />\r\n            </Card>\r\n*/\r\nexport default MemoryCard;"]},"metadata":{},"sourceType":"module"}