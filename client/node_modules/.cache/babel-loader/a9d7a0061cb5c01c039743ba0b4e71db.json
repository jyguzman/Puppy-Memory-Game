{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jordi\\\\OneDrive\\\\Desktop\\\\puppymemorygame\\\\src\\\\components\\\\MemoryCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyle } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MemoryCard = props => {\n  _s();\n\n  const url = props.url;\n  const url2 = \"https://pixabay.com/get/gb408ec9da33f4d82b874685968d2f99d3eae5cfc2ba703ba67c815b03ccd65edcd642ad7e216f3ec48804d72a577c2dc_640.png\";\n  const fit = \"?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=150&w=150\";\n  const [flipped, set] = useState(false);\n  const [cards, setCards] = useState(props.cardUrls);\n  const [won, setWon] = useState(false);\n  const [flippedCards, setFlippedCards] = useState([]);\n  const [flippedCount, setFlippedCount] = useState(0);\n\n  const checkForMatch = () => {\n    return flippedCards[0].id === flippedCards[1].id;\n  };\n\n  const onCardClick = () => {\n    //e.preventDefault();\n    console.log(cards[props.id]); //setFlippedCards(e.target.id);\n\n    /*setFlippedCount(flippedCount++);\r\n    setFlippedCount([...flippedCards]);\r\n    flippedCards.push(cards[id]);*/\n\n    console.log(flippedCount);\n\n    if (checkForMatch()) {\n      setWon(true);\n      console.log(flippedCards);\n    }\n\n    if (flippedCount > 2) setFlippedCards([]);\n    return null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 4,\n    sm: 3,\n    md: 3,\n    xl: 3,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      id: props.id,\n      className: \"c\",\n      children: /*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        image: flipped ? url + fit : url2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MemoryCard, \"+7sfMQGXCwSEQHz264/KwVpXUoo=\");\n\n_c = MemoryCard;\nexport default MemoryCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemoryCard\");","map":{"version":3,"sources":["C:/Users/jordi/OneDrive/Desktop/puppymemorygame/src/components/MemoryCard.js"],"names":["React","useState","Card","CardMedia","Grid","makeStyle","MemoryCard","props","url","url2","fit","flipped","set","cards","setCards","cardUrls","won","setWon","flippedCards","setFlippedCards","flippedCount","setFlippedCount","checkForMatch","id","onCardClick","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,SAAT,QAA0B,mBAA1B;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAMC,GAAG,GAAGD,KAAK,CAACC,GAAlB;AACA,QAAMC,IAAI,GAAG,mIAAb;AACA,QAAMC,GAAG,GAAG,uDAAZ;AACA,QAAM,CAACC,OAAD,EAAUC,GAAV,IAAiBX,QAAQ,CAAC,KAAD,CAA/B;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAACM,KAAK,CAACQ,QAAP,CAAlC;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBhB,QAAQ,CAAC,KAAD,CAA9B;AACA,QAAM,CAACiB,YAAD,EAAeC,eAAf,IAAkClB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACmB,YAAD,EAAeC,eAAf,IAAkCpB,QAAQ,CAAC,CAAD,CAAhD;;AAEA,QAAMqB,aAAa,GAAG,MAAM;AACxB,WAAQJ,YAAY,CAAC,CAAD,CAAZ,CAAgBK,EAAhB,KAAuBL,YAAY,CAAC,CAAD,CAAZ,CAAgBK,EAA/C;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACN,KAAK,CAACgB,EAAP,CAAjB,EAFsB,CAGtB;;AACA;AACR;AACA;;AACQE,IAAAA,OAAO,CAACC,GAAR,CAAYN,YAAZ;;AACA,QAAIE,aAAa,EAAjB,EAAqB;AACjBL,MAAAA,MAAM,CAAC,IAAD,CAAN;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYR,YAAZ;AACH;;AACD,QAAIE,YAAY,GAAG,CAAnB,EACID,eAAe,CAAC,EAAD,CAAf;AACJ,WAAO,IAAP;AACH,GAfD;;AAiBA,sBACI,QAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,CAAtB;AAAyB,IAAA,EAAE,EAAE,CAA7B;AAAgC,IAAA,EAAE,EAAE,CAApC;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAEZ,KAAK,CAACgB,EAAhB;AAAqB,MAAA,SAAS,EAAC,GAA/B;AAAA,6BACI,QAAC,SAAD;AACI,QAAA,SAAS,EAAC,KADd;AAEI,QAAA,KAAK,EAAEZ,OAAO,GAAGH,GAAG,GAACE,GAAP,GAAaD;AAF/B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAzCD;;GAAMH,U;;KAAAA,U;AA2CN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyle } from '@material-ui/core';\r\n\r\nconst MemoryCard = (props) => {\r\n    const url = props.url;\r\n    const url2 = \"https://pixabay.com/get/gb408ec9da33f4d82b874685968d2f99d3eae5cfc2ba703ba67c815b03ccd65edcd642ad7e216f3ec48804d72a577c2dc_640.png\";\r\n    const fit = \"?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=150&w=150\";\r\n    const [flipped, set] = useState(false);\r\n    const [cards, setCards] = useState(props.cardUrls);\r\n    const [won, setWon] = useState(false);\r\n    const [flippedCards, setFlippedCards] = useState([]);\r\n    const [flippedCount, setFlippedCount] = useState(0);\r\n\r\n    const checkForMatch = () => {\r\n        return (flippedCards[0].id === flippedCards[1].id);\r\n    };\r\n\r\n    const onCardClick = () => {\r\n        //e.preventDefault();\r\n        console.log(cards[props.id]);\r\n        //setFlippedCards(e.target.id);\r\n        /*setFlippedCount(flippedCount++);\r\n        setFlippedCount([...flippedCards]);\r\n        flippedCards.push(cards[id]);*/\r\n        console.log(flippedCount);\r\n        if (checkForMatch()) {\r\n            setWon(true);\r\n            console.log(flippedCards);\r\n        }\r\n        if (flippedCount > 2)\r\n            setFlippedCards([]);\r\n        return null;\r\n    };\r\n\r\n    return (\r\n        <Grid item xs={4} sm={3} md={3} xl={3}>\r\n            <Card id={props.id}  className=\"c\">\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    image={flipped ? url+fit : url2}\r\n                />\r\n            </Card>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default MemoryCard;"]},"metadata":{},"sourceType":"module"}